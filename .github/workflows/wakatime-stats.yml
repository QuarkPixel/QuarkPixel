name: Update WakaTime Badge

on:
  schedule:
    - cron: '0 0 * * *' # Run daily at UTC 00:00
  workflow_dispatch: # Allow manual trigger

jobs:
  update-wakatime-badge:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.METRICS_TOKEN }} # Use METRICS_TOKEN for checkout

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Fetch WakaTime stats and generate SVG
        env:
          WAKATIME_API_KEY: ${{ secrets.WAKATIME_API_KEY }}
        run: |
          # Fetch total coding time from WakaTime API
          curl -s -H "Authorization: Basic $(echo -n $WAKATIME_API_KEY | base64)" \
            "https://wakatime.com/api/v1/users/current/stats/all_time" > wakatime_stats.json

          # Check if API response is valid
          if [ ! -s wakatime_stats.json ]; then
            echo "Error: Failed to fetch WakaTime stats"
            exit 1
          fi

          # Extract total coding time
          TOTAL_TIME=$(jq -r '.data.human_readable_total' wakatime_stats.json)

          # Encode spaces as %20 for URL
          TOTAL_TIME_ENCODED=$(echo "$TOTAL_TIME" | sed 's/ /%20/g')

          # Download SVG badge from Shields.io
          curl -s "https://img.shields.io/badge/WakaTime-${TOTAL_TIME_ENCODED}-blue?style=for-the-badge&logo=wakatime" \
            -o assets/wakatime_badge.svg

      - name: Update README
        run: |
          # Ensure README references the SVG file
          if ! grep -q "![WakaTime Stats](assets/wakatime_badge.svg)" README.md; then
            echo -e "\n## Coding Stats\n![WakaTime Stats](assets/wakatime_badge.svg)" >> README.md
          fi

      - name: Commit and push changes
        env:
          GITHUB_TOKEN: ${{ secrets.METRICS_TOKEN }} # Use METRICS_TOKEN for push
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"
          git add assets/wakatime_badge.svg README.md
          git commit -m "Update WakaTime badge" || echo "No changes to commit"

          # Try pushing to main; if it fails due to branch protection, push to a new branch
          git push origin main || {
            echo "Push to main failed, trying new branch"
            git checkout -b wakatime-stats
            git push origin wakatime-stats
            gh pr create --title "Update WakaTime badge" --body "Automated update" --base main --head wakatime-stats
          }

      - name: Install GitHub CLI (for PR creation)
        if: failure() # Run only if push to main fails
        run: |
          sudo apt-get update
          sudo apt-get install -y ghname: Update WakaTime Badge

          on:
            schedule:
              - cron: '0 0 * * *' # Run daily at UTC 00:00
            workflow_dispatch: # Allow manual trigger

          jobs:
            update-wakatime-badge:
              runs-on: ubuntu-latest
              steps:
                - name: Checkout repository
                  uses: actions/checkout@v4
                  with:
                    token: ${{ secrets.METRICS_TOKEN }} # Use METRICS_TOKEN for checkout

                - name: Install jq
                  run: sudo apt-get update && sudo apt-get install -y jq

                - name: Fetch WakaTime stats and generate SVG
                  env:
                    WAKATIME_API_KEY: ${{ secrets.WAKATIME_API_KEY }}
                  run: |
                    # Fetch total coding time from WakaTime API
                    curl -s -H "Authorization: Basic $(echo -n $WAKATIME_API_KEY | base64)" \
                      "https://wakatime.com/api/v1/users/current/stats/all_time" > wakatime_stats.json

                    # Check if API response is valid
                    if [ ! -s wakatime_stats.json ]; then
                      echo "Error: Failed to fetch WakaTime stats"
                      exit 1
                    fi

                    # Extract total coding time
                    TOTAL_TIME=$(jq -r '.data.human_readable_total' wakatime_stats.json)

                    # Encode spaces as %20 for URL
                    TOTAL_TIME_ENCODED=$(echo "$TOTAL_TIME" | sed 's/ /%20/g')

                    # Download SVG badge from Shields.io
                    curl -s "https://img.shields.io/badge/WakaTime-${TOTAL_TIME_ENCODED}-blue?style=for-the-badge&logo=wakatime" \
                      -o assets/wakatime_badge.svg

                - name: Update README
                  run: |
                    # Ensure README references the SVG file
                    if ! grep -q "![WakaTime Stats](assets/wakatime_badge.svg)" README.md; then
                      echo -e "\n## Coding Stats\n![WakaTime Stats](assets/wakatime_badge.svg)" >> README.md
                    fi

                - name: Commit and push changes
                  env:
                    GITHUB_TOKEN: ${{ secrets.METRICS_TOKEN }} # Use METRICS_TOKEN for push
                  run: |
                    git config --global user.name "GitHub Action"
                    git config --global user.email "action@github.com"
                    git add assets/wakatime_badge.svg README.md
                    git commit -m "Update WakaTime badge" || echo "No changes to commit"

                    # Try pushing to main; if it fails due to branch protection, push to a new branch
                    git push origin main || {
                      echo "Push to main failed, trying new branch"
                      git checkout -b wakatime-stats
                      git push origin wakatime-stats
                      gh pr create --title "Update WakaTime badge" --body "Automated update" --base main --head wakatime-stats
                    }

                - name: Install GitHub CLI (for PR creation)
                  if: failure() # Run only if push to main fails
                  run: |
                    sudo apt-get update
                    sudo apt-get install -y gh
